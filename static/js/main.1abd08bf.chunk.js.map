{"version":3,"sources":["E-Summit.png","EventList/EventList.js","Event/Event.js","Navbar/Navbar.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EventList","state","data","qbEventTitleList","Axios","get","then","res","map","eventData","qbEventLink","id","qbEventTitle","className","key","to","name","push","setState","this","Component","Event","qbEventContent","dataId","props","match","params","post_id","axios","console","log","src","cover_pic","alt","class","time","year","date","details","email","no_of_ppl_registered","href","website_url","Navbar","qbNavbarClickFun","event","qbNavbarLinks","target","nodeName","parentElement","querySelector","classList","contains","remove","add","onClick","Footer","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1abd08bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/E-Summit.7df14f25.png\";","import React, { Component } from \"react\";\r\nimport './EventList.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ESummit from \"../E-Summit.png\";\r\n\r\nclass EventList extends Component{\r\n    state={\r\n        data:null,\r\n        qbEventTitleList:null\r\n    }\r\n    constructor(){\r\n        super();\r\n        Axios.get('https://ecell.nitrr.ac.in/events/list/2019/?format=json').then( res =>{\r\n            let qbEventTitleList=[];\r\n            res.data.data.map( eventData =>{\r\n                let qbEventLink=\"./Event/\"+eventData.id;\r\n                let qbEventTitle=(\r\n                    <div className=\"qb-event-title-wrap qbCardShadow\" key={eventData.id}>\r\n                        <Link to={qbEventLink} className=\"qb-event-link\">\r\n                            <div className=\"qb-event-title\">\r\n                                {eventData.name}\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                );\r\n                qbEventTitleList.push(qbEventTitle);\r\n            });\r\n            this.setState({\r\n                qbEventTitleList:qbEventTitleList\r\n            });\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"qb-event-list-wrap\">\r\n                <div className=\"qb-event-list\">\r\n                    <div className=\"qb-event-list-head\">\r\n                        List of All Events of E-Cell\r\n                    </div>\r\n                    <div className=\"qb-event-list-events\">\r\n                        {this.state.qbEventTitleList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EventList;","import React, { Component } from \"react\";\r\nimport \"./Event.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Event extends Component{\r\n    state={\r\n        data:null,\r\n        qbEventContent:null\r\n    }\r\n\r\n    qbEventContent;\r\n    componentDidMount(){\r\n        let dataId=this.props.match.params.post_id;\r\n        axios.get('https://ecell.nitrr.ac.in/events/list/2019/?format=json').then( res =>{\r\n            res.data.data.map( eventData =>{\r\n                if(dataId==eventData.id)\r\n                {\r\n                    console.log(eventData)\r\n                    this.setState({\r\n                        data:eventData\r\n                    });\r\n\r\n                    this.qbEventContent=(<div className=\"qb-event-wrap\">\r\n                        <div className=\"qb-event-title\">{eventData.name}</div>\r\n                        <div className=\"qb-event-card-wrap\">\r\n                            <div className=\"qb-event-card\">\r\n                                <img className=\"qb-event-card-pic\" src={eventData.cover_pic} alt=\"\" />\r\n                                <div className=\"qb-event-card-details\">\r\n                                    <div className=\"qb-event-card-des\">\r\n                                        <span><i class=\"far fa-clock\"></i>   Time: </span>{eventData.time} \r\n                                    </div>\r\n                                    <div className=\"qb-event-card-des\">\r\n                                        <span><i class=\"far fa-calendar\"></i>   Version: </span>{eventData.year}\r\n                                    </div>\r\n                                    <div className=\"qb-event-card-des\">\r\n                                        <span><i class=\"far fa-calendar-alt\"></i>   Date: </span>{eventData.date}\r\n                                    </div>\r\n                                    <div className=\"qb-event-card-des\">\r\n                                        <span><i class=\"fas fa-map-marker-alt\"></i>   Venue: </span>NIT Raipur\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"qb-event-details\" >\r\n                            <div className=\"qb-psuedo\"></div>  \r\n                            <div className=\"qb-psuedo-details-card\">\r\n                                <div className=\"qb-event-card-des\">\r\n                                    <span><i class=\"far fa-clock\"></i>   Time: </span>{eventData.time} \r\n                                </div>\r\n                                <div className=\"qb-event-card-des\">\r\n                                    <span><i class=\"far fa-calendar\"></i>   Version: </span>{eventData.year}\r\n                                </div>\r\n                                <div className=\"qb-event-card-des\">\r\n                                    <span><i class=\"far fa-calendar-alt\"></i>   Date: </span>{eventData.date}\r\n                                </div>\r\n                                <div className=\"qb-event-card-des\">\r\n                                    <span><i class=\"fas fa-map-marker-alt\"></i>   Venue: </span>NIT Raipur\r\n                                </div>\r\n                            </div>     \r\n                            {this.state.data.details}\r\n                            <div className=\"qb-points\">\r\n                                <div className=\"qb-point\">\r\n                                    <span><i class=\"far fa-envelope\"></i>   Email : </span>{eventData.email}\r\n                                </div>\r\n                                <div className=\"qb-point\">\r\n                                    <span><i class=\"fas fa-user-friends\"></i>   Number of People Registered :  </span>{eventData.no_of_ppl_registered}\r\n                                </div>\r\n                                <div className=\"qb-point\">\r\n                                    <span><i class=\"far fa-paper-plane\"></i>   URL : </span><a href={eventData.website_url} >{eventData.website_url}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>);\r\n\r\n                    this.setState({\r\n                        qbEventContent:this.qbEventContent\r\n                    });\r\n                }\r\n            })\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"qb-event-container\">\r\n                <Link to=\"../\" >\r\n                    <div className=\"qb-back-btn qbCardShadow\">\r\n                        Back\r\n                    </div>\r\n                </Link>\r\n                {this.state.qbEventContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport './Navbar.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navbar extends Component{\r\n    constructor(){\r\n        super()\r\n        console.log(\"q\");\r\n    }\r\n    qbNavbarClickFun=(event) =>{\r\n        var qbNavbarLinks;\r\n        if(event.target.nodeName===\"I\")\r\n        {\r\n            qbNavbarLinks=event.target.parentElement.parentElement.querySelector(\".qb-navbar-links\");\r\n        }\r\n        else if(event.target.nodeName===\"DIV\")\r\n        {\r\n            qbNavbarLinks=event.target.parentElement.querySelector(\".qb-navbar-links\");\r\n        }\r\n\r\n        if(qbNavbarLinks.classList.contains(\"qb-navbar-links-close\"))\r\n        {\r\n            qbNavbarLinks.classList.remove(\"qb-navbar-links-close\");\r\n            qbNavbarLinks.classList.add(\"qb-navbar-links-open\");\r\n        }\r\n        else if(qbNavbarLinks.classList.contains(\"qb-navbar-links-open\"))\r\n        {\r\n            qbNavbarLinks.classList.remove(\"qb-navbar-links-open\");\r\n            qbNavbarLinks.classList.add(\"qb-navbar-links-close\");\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"qb-navbar\">\r\n                <div className=\"qb-navbar-content qbCardShadow\">\r\n                    <div className=\"qb-navbar-logo\">\r\n                        Navbar\r\n                    </div>\r\n                    <div className=\"qb-navbar-button\" onClick={ this.qbNavbarClickFun }>\r\n                        <i className=\"fa fa-bars\"></i>\r\n                    </div>\r\n                    <div className=\"qb-navbar-links qb-navbar-links-close\">\r\n                        <NavLink to=\"#\" className=\"qb-navbar-nav\">\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink to=\"#\" className=\"qb-navbar-nav\">\r\n                            Event Explorer\r\n                        </NavLink>\r\n                        <NavLink to=\"#\" className=\"qb-navbar-nav\">\r\n                            Contact\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar ;","import React, { Component } from 'react';\r\nimport \"./Footer.css\"\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"qb-footer-wrap\">\r\n                <div className=\"qb-footer-head\">\r\n                    Contact\r\n                </div>\r\n                <div className=\"qb-footer-content\">\r\n\r\n                </div>\r\n                <div className=\"qb-footer-credit\">\r\n                    Created and Maintained By Ayush Agrawal\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport EventList from './EventList/EventList';\nimport Event from './Event/Event'\nimport Navbar from './Navbar/Navbar';\nimport Footer from './Footer/Footer';\nimport ESummit from './E-Summit.png';\n\nclass App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route path='/' component={Navbar} />\n          <div className=\"qb-container\">\n            \n            <Route exact path='/' component={EventList} />\n            <Route path='/Event/:post_id' component={Event} />\n          </div>\n          <Route path='/' component={Footer}  />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}